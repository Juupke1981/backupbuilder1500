[include fluidd.cfg]
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_2C0001000751313433343333-if00


[virtual_sdcard]
path: /home/builder1500/printer_data/gcodes
on_error_gcode: CANCEL_PRINT



[printer]
kinematics: corexy
#kinematics: cartesian
max_velocity: 150
max_accel: 1500
max_z_velocity: 33
max_z_accel: 100

# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).

# See docs/Config_Reference.md for a description of parameters.

# Motor1
# RB		added rotation distance, steps per rotation, based on excel
# RB		added position max based on Simplify3D generated gcode
# RB		microsteps to be filled out! check end stop position
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 60
endstop_pin: ^PF4
position_endstop: 0
position_max: 1100
homing_speed: 50
step_pulse_duration: 0.000003
# homing_positive_dir: false
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

# Motor2
# RB		added rotation distance, steps per rotation, based on excel
# RB		added position max based on Simplify3D generated gcode
# RB		microsteps to be filled out! check end stop position!
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 60
endstop_pin: ^PF3
position_endstop: 0
position_max: 515
homing_speed: 50
step_pulse_duration: 0.000003
# homing_positive_dir: false
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

# Motor3
# RB		added rotation distance, steps per rotation, gear ratio based on excel
# RB		added position max based on Simplify3D generated gcode
# RB		microsteps to be filled out! check end stop position and homing retract logic!
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
endstop_pin: probe:z_virtual_endstop
microsteps: 16
full_steps_per_rotation: 200
gear_ratio: 30:1
rotation_distance: 60
#position_endstop: 0
position_max: 820
# position_min: 0
homing_speed: 10
second_homing_speed: 1
# homing_retract_dist: 3
step_pulse_duration: 0.000003

[safe_z_home]
home_xy_position: 550, 300 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

# Motor4
# RB		added rotation distance, steps per rotation, gear ratio based on excel
# RB		added position max based on Simplify3D generated gcode
# RB		microsteps to be filled out! check end stop position and homing retract logic!
# RB		WHERE IS z2 DRIVER CONNECTED TO? STEPPER_Z2 TO BE ADDED!
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
#endstop_pin: ^PF2
microsteps: 16
full_steps_per_rotation: 200
gear_ratio: 30:1
rotation_distance: 60
#position_endstop: 0
#position_max: 820
# position_min: 0
#homing_speed: 8
#second_homing_speed: 3
# homing_retract_dist: 3
step_pulse_duration: 0.000003




# Motor5
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
#endstop_pin: ^PF2
microsteps: 16
full_steps_per_rotation: 200
gear_ratio: 30:1
rotation_distance: 60
#position_endstop: 0
#position_max: 820
# position_min: 0
#homing_speed: 8
#second_homing_speed: 3
# homing_retract_dist: 3

## End-Stop 5
#[filament_switch_sensor material_0]
#switch_pin: PF0
step_pulse_duration: 0.000003

## Motor8
[extruder]
step_pin: PC7
dir_pin: !PC8
enable_pin: !PD2
microsteps: 16
#gear_ratio: 3:1
rotation_distance: 16
nozzle_diameter: 0.4
full_steps_per_rotation: 400
filament_diameter: 1.75
heater_pin: PA0 # HE0
sensor_pin: PB0 # T0
sensor_type: Generic 3950
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250
## End-Stop 6
[filament_switch_sensor material_0]
switch_pin: !PF2


## Motor8
[tmc2209 extruder]
uart_pin: PC6
run_current: 0.6
stealthchop_threshold: 999999

## Motor7
#[extruder2]
#step_pin: PD4
#dir_pin: PD3
#enable_pin: !PD6
#heater_pin: PA3 # HE2
#sensor_pin: PC4 # T2
#...

## Motor8
#[extruder3]
#step_pin: PC7
#dir_pin: PC8
#enable_pin: !PD2
#heater_pin: PA5 # HE3
#sensor_pin: PA7 # T3
#...

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB 
sensor_type: ATC Semitec 104GT-2
control: watermark
min_temp: 0
max_temp: 130

#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4

# Fan0
[fan]
pin: PF9

## Fan1
[heater_fan heatbreak_cooling_fan]
pin: PF7

## Fan2
#[heater_fan fan2]
#pin: PF6

## Fan3
#[heater_fan fan3]
#pin: PF8

## Fan4
#[heater_fan fan4]
#pin: PA4

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1



# RB		Made a start to fill this out (corexy), to be finalized.
# RB		Velocity and acceleration values from Simplify3D, z_accel unknown: TEST!


# RB		Added z_tilt section, to be filled out!
[z_tilt]
z_positions:5, 5
    1095, 5
    500, 495
points:5, 5
    1095, 5
    500, 495
speed: 50
horizontal_move_z: 5
retries: 20
retry_tolerance: 0.03
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[bed_mesh]
speed: 100
horizontal_move_z: 5
mesh_min: 5, 5
mesh_max: 1080, 490
probe_count: 9,5
algorithm: bicubic


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#[adxl345]
#cs_pin: PA15
#spi_bus: spi3a

[bltouch]
sensor_pin: PD13
control_pin: PD12
z_offset: 4.25

[output_pin power_relay]
pin: PA4


[gcode_button POWER_BUTTON]
pin: !PF1
press_gcode:
    SET_POWER_STEPPER_BED VALUE=1

[gcode_button POWER_SENSE]
pin: PD8
press_gcode:
release_gcode:
    SET_POWER_STEPPER_BED VALUE=0

[gcode_macro SET_POWER_STEPPER_BED]
# The variable below should be initialized to the startup value.  If your
# device is configured to be on at startup use "variable_value: 1"
variable_value: 0
gcode:
  {% if 'VALUE' not in params %}
    {action_raise_error("Parameter 'VALUE' missing from 'SET_POWER_STEPPER_BED'")}
  {% endif %}
  {% set state = params.VALUE|int %}
  {% if state %}
    {% if printer['gcode_button POWER_SENSE'].state == "PRESSED"%}
        SET_PIN PIN=power_relay VALUE=1
    {% else %}
        SET_PIN PIN=power_relay VALUE=0
        {% set state = 0 %}
        { action_raise_error("Emergency button not reset") }

    {% endif %}
  {% else %}
    SET_PIN PIN=power_relay VALUE=0
  {% endif %}
  # Update the state of our variable.  This will inform Moonraker that
  # the device has changed its state.
  SET_GCODE_VARIABLE MACRO=SET_POWER_STEPPER_BED VARIABLE=value value={state}

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.005005, 0.150630, 0.196880, 0.171880, 0.225005, 0.170630, 0.073130, 0.090005, 0.018130
#*# 	  0.102505, 0.193130, 0.200630, 0.188755, 0.247505, 0.181255, 0.126255, 0.173130, 0.141255
#*# 	  0.120630, 0.166880, 0.146880, 0.125630, 0.178755, 0.105005, 0.078755, 0.146880, 0.160630
#*# 	  0.158755, 0.150630, 0.106255, 0.090630, 0.099380, 0.068755, 0.030005, 0.151880, 0.203755
#*# 	  0.182505, 0.126255, 0.041880, 0.023130, 0.006880, -0.005620, -0.006870, 0.101880, 0.208755
#*# x_count = 9
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 1079.96
#*# min_y = 5.0
#*# max_y = 490.0
